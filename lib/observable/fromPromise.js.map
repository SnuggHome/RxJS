{"version":3,"sources":["../../es6/observable/fromPromise.js"],"names":[],"mappings":";;;qBAkBwB,WAAW;;2BAlBZ,eAAe;;;;IAChC,iBAAiB;AACR,aADT,iBAAiB,CACP,OAAO,EAAE;0CADnB,iBAAiB;;AAEf,+BAAM,IAAI,CAAC,CAAC;AACZ,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;0BAJC,iBAAiB;;AAAjB,qBAAiB,WAKnB,UAAU,GAAA,oBAAC,QAAQ,EAAE;AACjB,YAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC3B,YAAI,OAAO,EAAE;AACT,mBAAO,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACd,oBAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;AACxB,4BAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,4BAAQ,UAAO,CAAC,CAAC,CAAC,CAAC;iBACtB;aACJ,CAAC,CAAC;SACN;KACJ;;WAfC,iBAAiB;;;AAiBR,SAAS,WAAW,CAAC,OAAO,EAAE;AACzC,WAAO,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC;CACzC","file":"dist/es6/observable/fromPromise.js","sourcesContent":["import Observable from '../Observable';\nclass PromiseObservable extends Observable {\n    constructor(promise) {\n        super(null);\n        this.promise = promise;\n    }\n    subscriber(observer) {\n        var promise = this.promise;\n        if (promise) {\n            promise.then(x => {\n                if (!observer.unsubscribed) {\n                    observer.next(x);\n                    observer.return(x);\n                }\n            });\n        }\n    }\n}\nexport default function fromPromise(promise) {\n    return new PromiseObservable(promise);\n}\n"]}