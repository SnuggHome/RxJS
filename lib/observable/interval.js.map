{"version":3,"sources":["../../es6/observable/interval.js"],"names":[],"mappings":";;;;;;;;;qBA8BwB,KAAK;;2BA9BN,eAAe;;;;yBACjB,aAAa;;;;iCACb,uBAAuB;;;;IACtC,kBAAkB;AACT,aADT,kBAAkB,CACR,QAAQ,EAAE,SAAS,EAAE;8BAD/B,kBAAkB;;AAEhB,+BAAM,IAAI,CAAC,CAAC;AACZ,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;cALC,kBAAkB;;AAAlB,sBAAkB,WAMpB,UAAU,GAAA,oBAAC,QAAQ,EAAE;AACjB,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;KACnH;;WARC,kBAAkB;;;IAUlB,gBAAgB;AACP,aADT,gBAAgB,CACN,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE;8BAD5C,gBAAgB;;AAEd,6BAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACjB,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;cANC,gBAAgB;;AAAhB,oBAAgB,WAOlB,QAAQ,GAAA,oBAAG;AACP,YAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACpB,gBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1B,gBAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC1D;KACJ;;WAZC,gBAAgB;;;AActB,SAAS,QAAQ,CAAC,QAAQ,EAAE;AACxB,YAAQ,CAAC,QAAQ,EAAE,CAAC;CACvB;;AACc,SAAS,KAAK,GAAqC;QAApC,QAAQ,gCAAG,CAAC;QAAE,SAAS;;AACjD,WAAO,IAAI,kBAAkB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;CACtD;;AACD,CAAC","file":"interval.js","sourcesContent":["import Observable from '../Observable';\nimport Observer from '../Observer';\nimport nextTick from '../scheduler/nextTick';\nclass IntervalObservable extends Observable {\n    constructor(interval, scheduler) {\n        super(null);\n        this.interval = interval;\n        this.scheduler = scheduler;\n    }\n    subscriber(observer) {\n        this.scheduler.schedule(this.interval, new IntervalObserver(observer, this.interval, this.scheduler), dispatch);\n    }\n}\nclass IntervalObserver extends Observer {\n    constructor(destination, interval, scheduler) {\n        super(destination);\n        this.counter = 0;\n        this.interval = interval;\n        this.scheduler = scheduler;\n    }\n    emitNext() {\n        if (!this.unsubscribed) {\n            this.next(this.counter++);\n            this.scheduler.schedule(this.interval, this, dispatch);\n        }\n    }\n}\nfunction dispatch(observer) {\n    observer.emitNext();\n}\nexport default function timer(interval = 0, scheduler = nextTick) {\n    return new IntervalObservable(interval, scheduler);\n}\n;\n"]}