{"version":3,"sources":["../../es6/observable/fromEvent.js"],"names":[],"mappings":"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","file":"dist/es6/observable/fromEvent.js","sourcesContent":["import try_catch from '../util/tryCatch';\nimport error_obj from '../util/errorObject';\nimport Observable from '../Observable';\nimport Subscription from '../Subscription';\nimport CompositeSubscription from '../CompositeSubscription';\nimport fromEventPattern from './fromEventPattern';\nclass EventListenerObservable extends Observable {\n    constructor(element, eventName, selector) {\n        super(null);\n        this.element = element;\n        this.eventName = eventName;\n        this.selector = selector;\n    }\n    subscriber(observer) {\n        var selector = this.selector;\n        var listeners = createEventListener(this.element, this.eventName, function handler(e) {\n            var result = e;\n            var iteratorResult;\n            if (selector) {\n                result = try_catch(selector).apply(this, arguments);\n                if (result === error_obj) {\n                    observer[\"throw\"](error_obj.e);\n                    listeners.unsubscribe();\n                    return;\n                }\n            }\n            iteratorResult = observer.next(result);\n            if (iteratorResult.done) {\n                listeners.unsubscribe();\n            }\n        }, observer);\n        return listeners;\n    }\n}\nfunction createListener(element, name, handler, observer) {\n    if (element.addEventListener) {\n        element.addEventListener(name, handler, false);\n        return new Subscription(function () {\n            element.removeEventListener(name, handler, false);\n        }, observer);\n    }\n    throw new Error('No listener found.');\n}\nfunction createEventListener(element, eventName, handler, observer) {\n    var subscriptions = new CompositeSubscription();\n    // Asume NodeList\n    if (Object.prototype.toString.call(element) === '[object NodeList]') {\n        for (var i = 0, len = element.length; i < len; i++) {\n            subscriptions.add(createEventListener(element.item(i), eventName, handler, observer));\n        }\n    }\n    else if (element) {\n        subscriptions.add(createListener(element, eventName, handler, observer));\n    }\n    return subscriptions;\n}\n/**\n * Creates an observable sequence by adding an event listener to the matching DOMElement or each item in the NodeList.\n *\n * @example\n *   var source = Rx.Observable.fromEvent(element, 'mouseup');\n *\n * @param {any} element The DOMElement or NodeList to attach a listener.\n * @param {string} eventName The event name to attach the observable sequence.\n * @param {Function} [selector] A selector which takes the arguments from the event handler to produce a single item to yield on next.\n * @returns {Observable} An observable sequence of events from the specified element and the specified event.\n */\nexport default function fromEvent(element, eventName, selector = null) {\n    // Node.js specific\n    if (element.addListener) {\n        return fromEventPattern(function (h) {\n            element.addListener(eventName, h);\n        }, function (h) {\n            element.removeListener(eventName, h);\n        }, selector);\n    }\n    var config = this.config || {};\n    // Use only if non-native events are allowed\n    if (!config.useNativeEvents) {\n        // Handles jq, Angular.js, Zepto, Marionette, Ember.js\n        if (typeof element.on === 'function' && typeof element.off === 'function') {\n            return fromEventPattern(function (h) {\n                element.on(eventName, h);\n            }, function (h) {\n                element.off(eventName, h);\n            }, selector);\n        }\n    }\n    return new EventListenerObservable(element, eventName, selector);\n}\n;\n"]}