{"version":3,"sources":["../../es6/operator/reduce.js"],"names":[],"mappings":";;;qBAsCwB,MAAM;;4BAtCR,kBAAkB;;;;+BAClB,qBAAqB;;;;2BACpB,eAAe;;;;yBACjB,aAAa;;;;4BACT,iBAAiB;;;;IACpC,cAAc;AACL,aADT,cAAc,CACJ,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE;0CADhD,cAAc;;AAEZ,6BAAM,WAAW,CAAC,CAAC;AACnB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,SAAS,GAAG,YAAY,CAAC;KACjC;;0BALC,cAAc;;AAAd,kBAAc,WAMhB,KAAK,GAAA,eAAC,KAAK,EAAE;AACT,YAAI,MAAM,GAAG,0BAAU,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC9D,YAAI,MAAM,KAAK,6BAAU,CAAC,EAAE;AACxB,gBAAI,CAAC,WAAW,SAAM,CAAC,6BAAU,CAAC,CAAC,CAAC;SACvC,MACI;AACD,gBAAI,CAAC,SAAS,GAAG,MAAM,CAAC;SAC3B;AACD,eAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;KAC1B;;AAfC,kBAAc,WAgBhB,OAAO,GAAA,iBAAC,KAAK,EAAE;AACX,YAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtC,eAAO,IAAI,CAAC,WAAW,UAAO,CAAC,KAAK,CAAC,CAAC;KACzC;;WAnBC,cAAc;;;IAqBd,gBAAgB;AACP,aADT,gBAAgB,CACN,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE;0CAD3C,gBAAgB;;AAEd,+BAAM,IAAI,CAAC,CAAC;AACZ,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACpC;;0BANC,gBAAgB;;AAAhB,oBAAgB,WAOlB,UAAU,GAAA,oBAAC,QAAQ,EAAE;AACjB,YAAI,cAAc,GAAG,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACrF,eAAO,0BAAa,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;KACpF;;WAVC,gBAAgB;;;AAYP,SAAS,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE;AACpD,WAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;CAC9D","file":"dist/es6/operator/reduce.js","sourcesContent":["import try_catch from '../util/tryCatch';\nimport error_obj from '../util/errorObject';\nimport Observable from '../Observable';\nimport Observer from '../Observer';\nimport Subscription from '../Subscription';\nclass ReduceObserver extends Observer {\n    constructor(destination, processor, initialValue) {\n        super(destination);\n        this.processor = processor;\n        this.aggregate = initialValue;\n    }\n    _next(value) {\n        var result = try_catch(this.processor)(this.aggregate, value);\n        if (result === error_obj.e) {\n            this.destination.throw(error_obj.e);\n        }\n        else {\n            this.aggregate = result;\n        }\n        return { done: false };\n    }\n    _return(value) {\n        this.destination.next(this.aggregate);\n        return this.destination.return(value);\n    }\n}\nclass ReduceObservable extends Observable {\n    constructor(source, processor, initialValue) {\n        super(null);\n        this.source = source;\n        this.processor = processor;\n        this.initialValue = initialValue;\n    }\n    subscriber(observer) {\n        var reduceObserver = new ReduceObserver(observer, this.processor, this.initialValue);\n        return Subscription.from(this.source.subscriber(reduceObserver), reduceObserver);\n    }\n}\nexport default function reduce(processor, initialValue) {\n    return new ReduceObservable(this, processor, initialValue);\n}\n"]}