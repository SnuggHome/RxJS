{"version":3,"sources":["../es6/Observable.js"],"names":[],"mappings":";;;;;;;;;;wBAAqB,YAAY;;;;4BACR,gBAAgB;;;;kCACV,sBAAsB;;;;iCAChC,sBAAsB;;;;mCACpB,wBAAwB;;;;IAC1B,UAAU;AAChB,aADM,UAAU,CACf,UAAU,EAAE;8BADP,UAAU;;AAEvB,YAAI,UAAU,EAAE;AACZ,gBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAChC;KACJ;;AALgB,cAAU,CAMpB,MAAM,GAAA,gBAAC,UAAU,EAAE;AACtB,eAAO,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;KACrC;;AARgB,cAAU,WAS3B,UAAU,GAAA,oBAAC,QAAQ,EAAE;AACjB,eAAO,KAAK,CAAC,CAAC;KACjB;;AAXgB,cAAU,+CAYf,UAAC,QAAQ,EAAE;AACnB,YAAI,EAAE,QAAQ,kCAAoB,AAAC,EAAE;AACjC,oBAAQ,GAAG,0BAAa,QAAQ,CAAC,CAAC;SACrC;AACD,eAAO,0BAAa,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;KACjE;;AAjBgB,cAAU,WAkB3B,SAAS,GAAA,mBAAC,qBAAqB,EAAoE;YAAlE,YAAY,gCAAG,IAAI;YAAE,aAAa,gCAAG,IAAI;YAAE,cAAc,gCAAG,IAAI;;AAC7F,YAAI,QAAQ,CAAC;AACb,YAAI,OAAO,qBAAqB,KAAK,QAAQ,EAAE;AAC3C,oBAAQ,GAAG,qBAAqB,CAAC;SACpC,MACI;AACD,oBAAQ,GAAG,sBAAS,MAAM,CAAC,qBAAqB,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC;SAClG;AACD,YAAI,YAAY,GAAG,oCAAuB,IAAI,CAAC,CAAC;AAChD,oBAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,oBAAY,CAAC,GAAG,CAAC,+BAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,oBAAoB,CAAC,CAAC,CAAC;AAC/E,eAAO,YAAY,CAAC;KACvB;;AA9BgB,cAAU,WA+B3B,OAAO,GAAA,iBAAC,WAAW,EAAE;;;AACjB,eAAO,aAAY,UAAC,OAAO,EAAE,MAAM,EAAK;AACpC,gBAAI,QAAQ,GAAG,sBAAS,MAAM,CAAC,UAAC,KAAK,EAAK;AACtC,2BAAW,CAAC,KAAK,CAAC,CAAC;AACnB,uBAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;aAC1B,EAAE,UAAC,GAAG,EAAK;AACR,sBAAM,CAAC,GAAG,CAAC,CAAC;AACZ,uBAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aACzB,EAAE,UAAC,KAAK,EAAK;AACV,uBAAO,CAAC,KAAK,CAAC,CAAC;AACf,uBAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aACzB,CAAC,CAAC;AACH,mDAAgB,CAAC,QAAQ,CAAC,CAAC;SAC9B,CAAC,CAAC;KACN;;WA7CgB,UAAU;;;qBAAV,UAAU;;AA+C/B,SAAS,oBAAoB,CAAC,IAAsB,EAAE;QAAvB,QAAQ,GAAT,IAAsB;QAAX,UAAU,GAArB,IAAsB;;AAChD,WAAO,UAAU,kCAAY,CAAC,QAAQ,CAAC,CAAC;CAC3C","file":"Observable.js","sourcesContent":["import Observer from './Observer';\nimport Subscription from './Subscription';\nimport SerialSubscription from './SerialSubscription';\nimport nextTick from './scheduler/nextTick';\nimport $$observer from './util/Symbol_observer';\nexport default class Observable {\n    constructor(subscriber) {\n        if (subscriber) {\n            this.subscriber = subscriber;\n        }\n    }\n    static create(subscriber) {\n        return new Observable(subscriber);\n    }\n    subscriber(observer) {\n        return void 0;\n    }\n    [$$observer](observer) {\n        if (!(observer instanceof Observer)) {\n            observer = new Observer(observer);\n        }\n        return Subscription.from(this.subscriber(observer), observer);\n    }\n    subscribe(observerOrNextHandler, throwHandler = null, returnHandler = null, disposeHandler = null) {\n        var observer;\n        if (typeof observerOrNextHandler === 'object') {\n            observer = observerOrNextHandler;\n        }\n        else {\n            observer = Observer.create(observerOrNextHandler, throwHandler, returnHandler, disposeHandler);\n        }\n        var subscription = new SerialSubscription(null);\n        subscription.observer = observer;\n        subscription.add(nextTick.schedule(0, [observer, this], dispatchSubscription));\n        return subscription;\n    }\n    forEach(nextHandler) {\n        return new Promise((resolve, reject) => {\n            var observer = Observer.create((value) => {\n                nextHandler(value);\n                return { done: false };\n            }, (err) => {\n                reject(err);\n                return { done: true };\n            }, (value) => {\n                resolve(value);\n                return { done: true };\n            });\n            this[$$observer](observer);\n        });\n    }\n}\nfunction dispatchSubscription([observer, observable]) {\n    return observable[$$observer](observer);\n}\n"]}